2023/06/07 11:21:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.0 (default, Mar  3 2022, 09:58:08) [GCC 7.5.0]
    CUDA available: True
    numpy_random_seed: 269904771
    GPU 0,1,2,3: NVIDIA GeForce RTX 3080
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.6, V11.6.112
    GCC: gcc (Ubuntu/Linaro 4.7.4-3ubuntu12) 4.7.4
    PyTorch: 2.0.1+cu117
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.4.1  (built against CUDA 11.6)
    - Built with CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu117
    OpenCV: 4.7.0
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/07 11:21:03 - mmengine - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNeSt',
        depth=50,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=30,
        in_channels=2048,
        loss=dict(
            type='LabelSmoothLoss',
            label_smooth_val=0.1,
            num_classes=30,
            reduction='mean',
            loss_weight=1.0),
        topk=(1, 5),
        cal_acc=False),
    train_cfg=dict(augments=dict(type='Mixup', alpha=0.2)),
    init_cfg=dict(
        type='Pretrained',
        checkpoint=
        'https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth'
    ))
dataset_type = 'CustomDataset'
data_preprocessor = dict(
    num_classes=30,
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', scale=224),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='PackInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='ResizeEdge', scale=256, edge='short'),
    dict(type='CenterCrop', crop_size=224),
    dict(type='PackInputs')
]
train_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit30_dataset/training_set',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', scale=224),
            dict(type='RandomFlip', prob=0.5, direction='horizontal'),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=True))
val_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit30_dataset/val_set',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
val_evaluator = dict(type='Accuracy', topk=(1, 5))
test_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit30_dataset/test_set',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
test_evaluator = dict(type='Accuracy', topk=(1, 5))
optim_wrapper = dict(
    optimizer=dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001))
param_scheduler = dict(
    type='MultiStepLR', by_epoch=True, milestones=[30, 60, 90], gamma=0.1)
train_cfg = dict(by_epoch=True, max_epochs=100, val_interval=1)
val_cfg = dict()
test_cfg = dict()
auto_scale_lr = dict(base_batch_size=256)
default_scope = 'mmpretrain'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=1, max_keep_ckpts=5, save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='VisualizationHook', enable=False))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[dict(type='LocalVisBackend')])
log_level = 'INFO'
load_from = None
resume = False
randomness = dict(seed=None, deterministic=False)
launcher = 'none'
work_dir = './exp'

2023/06/07 11:21:05 - mmengine - INFO - Because batch augmentations are enabled, the data preprocessor automatically enables the `to_onehot` option to generate one-hot format labels.
2023/06/07 11:21:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/07 11:21:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/07 11:21:07 - mmengine - INFO - load model from: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/07 11:21:07 - mmengine - INFO - Loads checkpoint by http backend from path: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/07 11:21:07 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for backbone.layer2.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
size mismatch for backbone.layer3.0.downsample.1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
size mismatch for backbone.layer4.0.downsample.1.weight: copying a param with shape torch.Size([2048]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([30, 2048]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([30]).
unexpected key in source state_dict: backbone.conv1.weight, backbone.bn1.weight, backbone.bn1.bias, backbone.bn1.running_mean, backbone.bn1.running_var, backbone.bn1.num_batches_tracked, backbone.layer1.0.bn2.weight, backbone.layer1.0.bn2.bias, backbone.layer1.0.bn2.running_mean, backbone.layer1.0.bn2.running_var, backbone.layer1.0.bn2.num_batches_tracked, backbone.layer1.0.conv2.weight, backbone.layer1.1.bn2.weight, backbone.layer1.1.bn2.bias, backbone.layer1.1.bn2.running_mean, backbone.layer1.1.bn2.running_var, backbone.layer1.1.bn2.num_batches_tracked, backbone.layer1.1.conv2.weight, backbone.layer1.2.bn2.weight, backbone.layer1.2.bn2.bias, backbone.layer1.2.bn2.running_mean, backbone.layer1.2.bn2.running_var, backbone.layer1.2.bn2.num_batches_tracked, backbone.layer1.2.conv2.weight, backbone.layer2.0.bn2.weight, backbone.layer2.0.bn2.bias, backbone.layer2.0.bn2.running_mean, backbone.layer2.0.bn2.running_var, backbone.layer2.0.bn2.num_batches_tracked, backbone.layer2.0.conv2.weight, backbone.layer2.0.downsample.0.weight, backbone.layer2.0.downsample.1.bias, backbone.layer2.0.downsample.1.running_mean, backbone.layer2.0.downsample.1.running_var, backbone.layer2.0.downsample.1.num_batches_tracked, backbone.layer2.1.bn2.weight, backbone.layer2.1.bn2.bias, backbone.layer2.1.bn2.running_mean, backbone.layer2.1.bn2.running_var, backbone.layer2.1.bn2.num_batches_tracked, backbone.layer2.1.conv2.weight, backbone.layer2.2.bn2.weight, backbone.layer2.2.bn2.bias, backbone.layer2.2.bn2.running_mean, backbone.layer2.2.bn2.running_var, backbone.layer2.2.bn2.num_batches_tracked, backbone.layer2.2.conv2.weight, backbone.layer2.3.bn2.weight, backbone.layer2.3.bn2.bias, backbone.layer2.3.bn2.running_mean, backbone.layer2.3.bn2.running_var, backbone.layer2.3.bn2.num_batches_tracked, backbone.layer2.3.conv2.weight, backbone.layer3.0.bn2.weight, backbone.layer3.0.bn2.bias, backbone.layer3.0.bn2.running_mean, backbone.layer3.0.bn2.running_var, backbone.layer3.0.bn2.num_batches_tracked, backbone.layer3.0.conv2.weight, backbone.layer3.0.downsample.0.weight, backbone.layer3.0.downsample.1.bias, backbone.layer3.0.downsample.1.running_mean, backbone.layer3.0.downsample.1.running_var, backbone.layer3.0.downsample.1.num_batches_tracked, backbone.layer3.1.bn2.weight, backbone.layer3.1.bn2.bias, backbone.layer3.1.bn2.running_mean, backbone.layer3.1.bn2.running_var, backbone.layer3.1.bn2.num_batches_tracked, backbone.layer3.1.conv2.weight, backbone.layer3.2.bn2.weight, backbone.layer3.2.bn2.bias, backbone.layer3.2.bn2.running_mean, backbone.layer3.2.bn2.running_var, backbone.layer3.2.bn2.num_batches_tracked, backbone.layer3.2.conv2.weight, backbone.layer3.3.bn2.weight, backbone.layer3.3.bn2.bias, backbone.layer3.3.bn2.running_mean, backbone.layer3.3.bn2.running_var, backbone.layer3.3.bn2.num_batches_tracked, backbone.layer3.3.conv2.weight, backbone.layer3.4.bn2.weight, backbone.layer3.4.bn2.bias, backbone.layer3.4.bn2.running_mean, backbone.layer3.4.bn2.running_var, backbone.layer3.4.bn2.num_batches_tracked, backbone.layer3.4.conv2.weight, backbone.layer3.5.bn2.weight, backbone.layer3.5.bn2.bias, backbone.layer3.5.bn2.running_mean, backbone.layer3.5.bn2.running_var, backbone.layer3.5.bn2.num_batches_tracked, backbone.layer3.5.conv2.weight, backbone.layer4.0.bn2.weight, backbone.layer4.0.bn2.bias, backbone.layer4.0.bn2.running_mean, backbone.layer4.0.bn2.running_var, backbone.layer4.0.bn2.num_batches_tracked, backbone.layer4.0.conv2.weight, backbone.layer4.0.downsample.0.weight, backbone.layer4.0.downsample.1.bias, backbone.layer4.0.downsample.1.running_mean, backbone.layer4.0.downsample.1.running_var, backbone.layer4.0.downsample.1.num_batches_tracked, backbone.layer4.1.bn2.weight, backbone.layer4.1.bn2.bias, backbone.layer4.1.bn2.running_mean, backbone.layer4.1.bn2.running_var, backbone.layer4.1.bn2.num_batches_tracked, backbone.layer4.1.conv2.weight, backbone.layer4.2.bn2.weight, backbone.layer4.2.bn2.bias, backbone.layer4.2.bn2.running_mean, backbone.layer4.2.bn2.running_var, backbone.layer4.2.bn2.num_batches_tracked, backbone.layer4.2.conv2.weight

missing keys in source state_dict: backbone.stem.0.conv.weight, backbone.stem.0.bn.weight, backbone.stem.0.bn.bias, backbone.stem.0.bn.running_mean, backbone.stem.0.bn.running_var, backbone.stem.1.conv.weight, backbone.stem.1.bn.weight, backbone.stem.1.bn.bias, backbone.stem.1.bn.running_mean, backbone.stem.1.bn.running_var, backbone.stem.2.conv.weight, backbone.stem.2.bn.weight, backbone.stem.2.bn.bias, backbone.stem.2.bn.running_mean, backbone.stem.2.bn.running_var, backbone.layer1.0.conv2.conv.weight, backbone.layer1.0.conv2.bn0.weight, backbone.layer1.0.conv2.bn0.bias, backbone.layer1.0.conv2.bn0.running_mean, backbone.layer1.0.conv2.bn0.running_var, backbone.layer1.0.conv2.fc1.weight, backbone.layer1.0.conv2.fc1.bias, backbone.layer1.0.conv2.bn1.weight, backbone.layer1.0.conv2.bn1.bias, backbone.layer1.0.conv2.bn1.running_mean, backbone.layer1.0.conv2.bn1.running_var, backbone.layer1.0.conv2.fc2.weight, backbone.layer1.0.conv2.fc2.bias, backbone.layer1.1.conv2.conv.weight, backbone.layer1.1.conv2.bn0.weight, backbone.layer1.1.conv2.bn0.bias, backbone.layer1.1.conv2.bn0.running_mean, backbone.layer1.1.conv2.bn0.running_var, backbone.layer1.1.conv2.fc1.weight, backbone.layer1.1.conv2.fc1.bias, backbone.layer1.1.conv2.bn1.weight, backbone.layer1.1.conv2.bn1.bias, backbone.layer1.1.conv2.bn1.running_mean, backbone.layer1.1.conv2.bn1.running_var, backbone.layer1.1.conv2.fc2.weight, backbone.layer1.1.conv2.fc2.bias, backbone.layer1.2.conv2.conv.weight, backbone.layer1.2.conv2.bn0.weight, backbone.layer1.2.conv2.bn0.bias, backbone.layer1.2.conv2.bn0.running_mean, backbone.layer1.2.conv2.bn0.running_var, backbone.layer1.2.conv2.fc1.weight, backbone.layer1.2.conv2.fc1.bias, backbone.layer1.2.conv2.bn1.weight, backbone.layer1.2.conv2.bn1.bias, backbone.layer1.2.conv2.bn1.running_mean, backbone.layer1.2.conv2.bn1.running_var, backbone.layer1.2.conv2.fc2.weight, backbone.layer1.2.conv2.fc2.bias, backbone.layer2.0.conv2.conv.weight, backbone.layer2.0.conv2.bn0.weight, backbone.layer2.0.conv2.bn0.bias, backbone.layer2.0.conv2.bn0.running_mean, backbone.layer2.0.conv2.bn0.running_var, backbone.layer2.0.conv2.fc1.weight, backbone.layer2.0.conv2.fc1.bias, backbone.layer2.0.conv2.bn1.weight, backbone.layer2.0.conv2.bn1.bias, backbone.layer2.0.conv2.bn1.running_mean, backbone.layer2.0.conv2.bn1.running_var, backbone.layer2.0.conv2.fc2.weight, backbone.layer2.0.conv2.fc2.bias, backbone.layer2.0.downsample.2.weight, backbone.layer2.0.downsample.2.bias, backbone.layer2.0.downsample.2.running_mean, backbone.layer2.0.downsample.2.running_var, backbone.layer2.1.conv2.conv.weight, backbone.layer2.1.conv2.bn0.weight, backbone.layer2.1.conv2.bn0.bias, backbone.layer2.1.conv2.bn0.running_mean, backbone.layer2.1.conv2.bn0.running_var, backbone.layer2.1.conv2.fc1.weight, backbone.layer2.1.conv2.fc1.bias, backbone.layer2.1.conv2.bn1.weight, backbone.layer2.1.conv2.bn1.bias, backbone.layer2.1.conv2.bn1.running_mean, backbone.layer2.1.conv2.bn1.running_var, backbone.layer2.1.conv2.fc2.weight, backbone.layer2.1.conv2.fc2.bias, backbone.layer2.2.conv2.conv.weight, backbone.layer2.2.conv2.bn0.weight, backbone.layer2.2.conv2.bn0.bias, backbone.layer2.2.conv2.bn0.running_mean, backbone.layer2.2.conv2.bn0.running_var, backbone.layer2.2.conv2.fc1.weight, backbone.layer2.2.conv2.fc1.bias, backbone.layer2.2.conv2.bn1.weight, backbone.layer2.2.conv2.bn1.bias, backbone.layer2.2.conv2.bn1.running_mean, backbone.layer2.2.conv2.bn1.running_var, backbone.layer2.2.conv2.fc2.weight, backbone.layer2.2.conv2.fc2.bias, backbone.layer2.3.conv2.conv.weight, backbone.layer2.3.conv2.bn0.weight, backbone.layer2.3.conv2.bn0.bias, backbone.layer2.3.conv2.bn0.running_mean, backbone.layer2.3.conv2.bn0.running_var, backbone.layer2.3.conv2.fc1.weight, backbone.layer2.3.conv2.fc1.bias, backbone.layer2.3.conv2.bn1.weight, backbone.layer2.3.conv2.bn1.bias, backbone.layer2.3.conv2.bn1.running_mean, backbone.layer2.3.conv2.bn1.running_var, backbone.layer2.3.conv2.fc2.weight, backbone.layer2.3.conv2.fc2.bias, backbone.layer3.0.conv2.conv.weight, backbone.layer3.0.conv2.bn0.weight, backbone.layer3.0.conv2.bn0.bias, backbone.layer3.0.conv2.bn0.running_mean, backbone.layer3.0.conv2.bn0.running_var, backbone.layer3.0.conv2.fc1.weight, backbone.layer3.0.conv2.fc1.bias, backbone.layer3.0.conv2.bn1.weight, backbone.layer3.0.conv2.bn1.bias, backbone.layer3.0.conv2.bn1.running_mean, backbone.layer3.0.conv2.bn1.running_var, backbone.layer3.0.conv2.fc2.weight, backbone.layer3.0.conv2.fc2.bias, backbone.layer3.0.downsample.2.weight, backbone.layer3.0.downsample.2.bias, backbone.layer3.0.downsample.2.running_mean, backbone.layer3.0.downsample.2.running_var, backbone.layer3.1.conv2.conv.weight, backbone.layer3.1.conv2.bn0.weight, backbone.layer3.1.conv2.bn0.bias, backbone.layer3.1.conv2.bn0.running_mean, backbone.layer3.1.conv2.bn0.running_var, backbone.layer3.1.conv2.fc1.weight, backbone.layer3.1.conv2.fc1.bias, backbone.layer3.1.conv2.bn1.weight, backbone.layer3.1.conv2.bn1.bias, backbone.layer3.1.conv2.bn1.running_mean, backbone.layer3.1.conv2.bn1.running_var, backbone.layer3.1.conv2.fc2.weight, backbone.layer3.1.conv2.fc2.bias, backbone.layer3.2.conv2.conv.weight, backbone.layer3.2.conv2.bn0.weight, backbone.layer3.2.conv2.bn0.bias, backbone.layer3.2.conv2.bn0.running_mean, backbone.layer3.2.conv2.bn0.running_var, backbone.layer3.2.conv2.fc1.weight, backbone.layer3.2.conv2.fc1.bias, backbone.layer3.2.conv2.bn1.weight, backbone.layer3.2.conv2.bn1.bias, backbone.layer3.2.conv2.bn1.running_mean, backbone.layer3.2.conv2.bn1.running_var, backbone.layer3.2.conv2.fc2.weight, backbone.layer3.2.conv2.fc2.bias, backbone.layer3.3.conv2.conv.weight, backbone.layer3.3.conv2.bn0.weight, backbone.layer3.3.conv2.bn0.bias, backbone.layer3.3.conv2.bn0.running_mean, backbone.layer3.3.conv2.bn0.running_var, backbone.layer3.3.conv2.fc1.weight, backbone.layer3.3.conv2.fc1.bias, backbone.layer3.3.conv2.bn1.weight, backbone.layer3.3.conv2.bn1.bias, backbone.layer3.3.conv2.bn1.running_mean, backbone.layer3.3.conv2.bn1.running_var, backbone.layer3.3.conv2.fc2.weight, backbone.layer3.3.conv2.fc2.bias, backbone.layer3.4.conv2.conv.weight, backbone.layer3.4.conv2.bn0.weight, backbone.layer3.4.conv2.bn0.bias, backbone.layer3.4.conv2.bn0.running_mean, backbone.layer3.4.conv2.bn0.running_var, backbone.layer3.4.conv2.fc1.weight, backbone.layer3.4.conv2.fc1.bias, backbone.layer3.4.conv2.bn1.weight, backbone.layer3.4.conv2.bn1.bias, backbone.layer3.4.conv2.bn1.running_mean, backbone.layer3.4.conv2.bn1.running_var, backbone.layer3.4.conv2.fc2.weight, backbone.layer3.4.conv2.fc2.bias, backbone.layer3.5.conv2.conv.weight, backbone.layer3.5.conv2.bn0.weight, backbone.layer3.5.conv2.bn0.bias, backbone.layer3.5.conv2.bn0.running_mean, backbone.layer3.5.conv2.bn0.running_var, backbone.layer3.5.conv2.fc1.weight, backbone.layer3.5.conv2.fc1.bias, backbone.layer3.5.conv2.bn1.weight, backbone.layer3.5.conv2.bn1.bias, backbone.layer3.5.conv2.bn1.running_mean, backbone.layer3.5.conv2.bn1.running_var, backbone.layer3.5.conv2.fc2.weight, backbone.layer3.5.conv2.fc2.bias, backbone.layer4.0.conv2.conv.weight, backbone.layer4.0.conv2.bn0.weight, backbone.layer4.0.conv2.bn0.bias, backbone.layer4.0.conv2.bn0.running_mean, backbone.layer4.0.conv2.bn0.running_var, backbone.layer4.0.conv2.fc1.weight, backbone.layer4.0.conv2.fc1.bias, backbone.layer4.0.conv2.bn1.weight, backbone.layer4.0.conv2.bn1.bias, backbone.layer4.0.conv2.bn1.running_mean, backbone.layer4.0.conv2.bn1.running_var, backbone.layer4.0.conv2.fc2.weight, backbone.layer4.0.conv2.fc2.bias, backbone.layer4.0.downsample.2.weight, backbone.layer4.0.downsample.2.bias, backbone.layer4.0.downsample.2.running_mean, backbone.layer4.0.downsample.2.running_var, backbone.layer4.1.conv2.conv.weight, backbone.layer4.1.conv2.bn0.weight, backbone.layer4.1.conv2.bn0.bias, backbone.layer4.1.conv2.bn0.running_mean, backbone.layer4.1.conv2.bn0.running_var, backbone.layer4.1.conv2.fc1.weight, backbone.layer4.1.conv2.fc1.bias, backbone.layer4.1.conv2.bn1.weight, backbone.layer4.1.conv2.bn1.bias, backbone.layer4.1.conv2.bn1.running_mean, backbone.layer4.1.conv2.bn1.running_var, backbone.layer4.1.conv2.fc2.weight, backbone.layer4.1.conv2.fc2.bias, backbone.layer4.2.conv2.conv.weight, backbone.layer4.2.conv2.bn0.weight, backbone.layer4.2.conv2.bn0.bias, backbone.layer4.2.conv2.bn0.running_mean, backbone.layer4.2.conv2.bn0.running_var, backbone.layer4.2.conv2.fc1.weight, backbone.layer4.2.conv2.fc1.bias, backbone.layer4.2.conv2.bn1.weight, backbone.layer4.2.conv2.bn1.bias, backbone.layer4.2.conv2.bn1.running_mean, backbone.layer4.2.conv2.bn1.running_var, backbone.layer4.2.conv2.fc2.weight, backbone.layer4.2.conv2.fc2.bias

Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([32, 3, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.stem.0.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.0.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.1.conv.weight - torch.Size([32, 32, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.stem.1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.2.conv.weight - torch.Size([64, 32, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.stem.2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv2.conv.weight - torch.Size([128, 32, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.conv2.bn0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.bn0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.fc1.weight - torch.Size([32, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.conv2.fc1.bias - torch.Size([32]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.conv2.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.fc2.weight - torch.Size([128, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.conv2.fc2.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv2.conv.weight - torch.Size([128, 32, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.conv2.bn0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.bn0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.fc1.weight - torch.Size([32, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.conv2.fc1.bias - torch.Size([32]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.conv2.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.fc2.weight - torch.Size([128, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.conv2.fc2.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv2.conv.weight - torch.Size([128, 32, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.conv2.bn0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.bn0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.fc1.weight - torch.Size([32, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.conv2.fc1.bias - torch.Size([32]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.conv2.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.fc2.weight - torch.Size([128, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.conv2.fc2.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv2.conv.weight - torch.Size([256, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.conv2.bn0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.bn0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.fc1.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.conv2.fc1.bias - torch.Size([64]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.conv2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.fc2.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.conv2.fc2.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv2.conv.weight - torch.Size([256, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.conv2.bn0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.bn0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.fc1.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.conv2.fc1.bias - torch.Size([64]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.conv2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.fc2.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.conv2.fc2.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv2.conv.weight - torch.Size([256, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.conv2.bn0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.bn0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.fc1.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.conv2.fc1.bias - torch.Size([64]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.conv2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.fc2.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.conv2.fc2.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv2.conv.weight - torch.Size([256, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.conv2.bn0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.bn0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.fc1.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.conv2.fc1.bias - torch.Size([64]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.conv2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.fc2.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.conv2.fc2.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv2.conv.weight - torch.Size([512, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.conv2.bn0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.bn0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.fc1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.conv2.fc1.bias - torch.Size([128]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.conv2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.fc2.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.conv2.fc2.bias - torch.Size([512]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv2.conv.weight - torch.Size([1024, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.conv2.bn0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.bn0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.fc1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.conv2.fc1.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.conv2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.fc2.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.conv2.fc2.bias - torch.Size([1024]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.2.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.2.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv2.conv.weight - torch.Size([1024, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.conv2.bn0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.bn0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.fc1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.conv2.fc1.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.conv2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.fc2.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.conv2.fc2.bias - torch.Size([1024]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv2.conv.weight - torch.Size([1024, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.conv2.bn0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.bn0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.fc1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.conv2.fc1.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.conv2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.fc2.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.conv2.fc2.bias - torch.Size([1024]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

head.fc.weight - torch.Size([30, 2048]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([30]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/07 11:21:07 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/07 11:21:07 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/07 11:21:07 - mmengine - INFO - Checkpoints will be saved to /home/xjs/lzz/mmpretrain/projects/fruit30/exp.
2023/06/07 11:21:23 - mmengine - INFO - Epoch(train)   [1][100/109]  lr: 1.0000e-01  eta: 0:28:46  time: 0.1291  data_time: 0.0007  memory: 4230  loss: 3.3991
2023/06/07 11:21:25 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:21:25 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/06/07 11:21:27 - mmengine - INFO - Epoch(val) [1][14/14]    accuracy/top1: 5.0459  accuracy/top5: 22.2477  data_time: 0.0234  time: 0.0687
2023/06/07 11:21:28 - mmengine - INFO - The best checkpoint with 5.0459 accuracy/top1 at 1 epoch is saved to best_accuracy_top1_epoch_1.pth.
2023/06/07 11:21:41 - mmengine - INFO - Epoch(train)   [2][100/109]  lr: 1.0000e-01  eta: 0:25:50  time: 0.1296  data_time: 0.0008  memory: 4230  loss: 3.2404
2023/06/07 11:21:42 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:21:42 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/06/07 11:21:44 - mmengine - INFO - Epoch(val) [2][14/14]    accuracy/top1: 12.1560  accuracy/top5: 41.2844  data_time: 0.0101  time: 0.0544
2023/06/07 11:21:44 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_1.pth is removed
2023/06/07 11:21:45 - mmengine - INFO - The best checkpoint with 12.1560 accuracy/top1 at 2 epoch is saved to best_accuracy_top1_epoch_2.pth.
2023/06/07 11:21:58 - mmengine - INFO - Epoch(train)   [3][100/109]  lr: 1.0000e-01  eta: 0:24:45  time: 0.1301  data_time: 0.0008  memory: 4230  loss: 3.0829
2023/06/07 11:21:59 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:21:59 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/06/07 11:22:01 - mmengine - INFO - Epoch(val) [3][14/14]    accuracy/top1: 14.6789  accuracy/top5: 52.2936  data_time: 0.0105  time: 0.0494
2023/06/07 11:22:01 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_2.pth is removed
2023/06/07 11:22:02 - mmengine - INFO - The best checkpoint with 14.6789 accuracy/top1 at 3 epoch is saved to best_accuracy_top1_epoch_3.pth.
2023/06/07 11:22:15 - mmengine - INFO - Epoch(train)   [4][100/109]  lr: 1.0000e-01  eta: 0:24:06  time: 0.1301  data_time: 0.0008  memory: 4230  loss: 2.8852
2023/06/07 11:22:16 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:22:16 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/06/07 11:22:18 - mmengine - INFO - Epoch(val) [4][14/14]    accuracy/top1: 19.0367  accuracy/top5: 63.0734  data_time: 0.0139  time: 0.0527
2023/06/07 11:22:18 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_3.pth is removed
2023/06/07 11:22:19 - mmengine - INFO - The best checkpoint with 19.0367 accuracy/top1 at 4 epoch is saved to best_accuracy_top1_epoch_4.pth.
2023/06/07 11:22:32 - mmengine - INFO - Epoch(train)   [5][100/109]  lr: 1.0000e-01  eta: 0:23:37  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 2.8784
2023/06/07 11:22:33 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:22:33 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/06/07 11:22:35 - mmengine - INFO - Epoch(val) [5][14/14]    accuracy/top1: 18.8073  accuracy/top5: 69.0367  data_time: 0.0103  time: 0.0492
2023/06/07 11:22:48 - mmengine - INFO - Epoch(train)   [6][100/109]  lr: 1.0000e-01  eta: 0:23:13  time: 0.1304  data_time: 0.0008  memory: 4230  loss: 2.9266
2023/06/07 11:22:49 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:22:49 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/06/07 11:22:51 - mmengine - INFO - Epoch(val) [6][14/14]    accuracy/top1: 19.9541  accuracy/top5: 73.8532  data_time: 0.0097  time: 0.0485
2023/06/07 11:22:51 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_4.pth is removed
2023/06/07 11:22:52 - mmengine - INFO - The best checkpoint with 19.9541 accuracy/top1 at 6 epoch is saved to best_accuracy_top1_epoch_6.pth.
2023/06/07 11:23:05 - mmengine - INFO - Epoch(train)   [7][100/109]  lr: 1.0000e-01  eta: 0:22:52  time: 0.1304  data_time: 0.0008  memory: 4230  loss: 2.9943
2023/06/07 11:23:06 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:23:06 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/06/07 11:23:08 - mmengine - INFO - Epoch(val) [7][14/14]    accuracy/top1: 27.0642  accuracy/top5: 73.3945  data_time: 0.0104  time: 0.0493
2023/06/07 11:23:08 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_6.pth is removed
2023/06/07 11:23:09 - mmengine - INFO - The best checkpoint with 27.0642 accuracy/top1 at 7 epoch is saved to best_accuracy_top1_epoch_7.pth.
2023/06/07 11:23:22 - mmengine - INFO - Epoch(train)   [8][100/109]  lr: 1.0000e-01  eta: 0:22:33  time: 0.1307  data_time: 0.0010  memory: 4230  loss: 2.7162
2023/06/07 11:23:24 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:23:24 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/06/07 11:23:25 - mmengine - INFO - Epoch(val) [8][14/14]    accuracy/top1: 32.5688  accuracy/top5: 74.5413  data_time: 0.0113  time: 0.0499
2023/06/07 11:23:25 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_7.pth is removed
2023/06/07 11:23:26 - mmengine - INFO - The best checkpoint with 32.5688 accuracy/top1 at 8 epoch is saved to best_accuracy_top1_epoch_8.pth.
2023/06/07 11:23:39 - mmengine - INFO - Epoch(train)   [9][100/109]  lr: 1.0000e-01  eta: 0:22:15  time: 0.1308  data_time: 0.0008  memory: 4230  loss: 2.5560
2023/06/07 11:23:41 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:23:41 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/06/07 11:23:42 - mmengine - INFO - Epoch(val) [9][14/14]    accuracy/top1: 34.1743  accuracy/top5: 78.2110  data_time: 0.0105  time: 0.0494
2023/06/07 11:23:42 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_8.pth is removed
2023/06/07 11:23:43 - mmengine - INFO - The best checkpoint with 34.1743 accuracy/top1 at 9 epoch is saved to best_accuracy_top1_epoch_9.pth.
2023/06/07 11:23:46 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:23:56 - mmengine - INFO - Epoch(train)  [10][100/109]  lr: 1.0000e-01  eta: 0:21:57  time: 0.1311  data_time: 0.0009  memory: 4230  loss: 2.6778
2023/06/07 11:23:58 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:23:58 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/07 11:23:59 - mmengine - INFO - Epoch(val) [10][14/14]    accuracy/top1: 27.7523  accuracy/top5: 70.1835  data_time: 0.0098  time: 0.0487
2023/06/07 11:24:13 - mmengine - INFO - Epoch(train)  [11][100/109]  lr: 1.0000e-01  eta: 0:21:41  time: 0.1303  data_time: 0.0007  memory: 4230  loss: 2.7083
2023/06/07 11:24:14 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:24:14 - mmengine - INFO - Saving checkpoint at 11 epochs
2023/06/07 11:24:16 - mmengine - INFO - Epoch(val) [11][14/14]    accuracy/top1: 31.8807  accuracy/top5: 75.9174  data_time: 0.0096  time: 0.0484
2023/06/07 11:24:29 - mmengine - INFO - Epoch(train)  [12][100/109]  lr: 1.0000e-01  eta: 0:21:24  time: 0.1305  data_time: 0.0008  memory: 4230  loss: 2.5196
2023/06/07 11:24:30 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:24:30 - mmengine - INFO - Saving checkpoint at 12 epochs
2023/06/07 11:24:32 - mmengine - INFO - Epoch(val) [12][14/14]    accuracy/top1: 32.3395  accuracy/top5: 76.6055  data_time: 0.0100  time: 0.0491
2023/06/07 11:24:45 - mmengine - INFO - Epoch(train)  [13][100/109]  lr: 1.0000e-01  eta: 0:21:08  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.6054
2023/06/07 11:24:46 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:24:46 - mmengine - INFO - Saving checkpoint at 13 epochs
2023/06/07 11:24:48 - mmengine - INFO - Epoch(val) [13][14/14]    accuracy/top1: 35.3211  accuracy/top5: 77.0642  data_time: 0.0099  time: 0.0488
2023/06/07 11:24:48 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_9.pth is removed
2023/06/07 11:24:49 - mmengine - INFO - The best checkpoint with 35.3211 accuracy/top1 at 13 epoch is saved to best_accuracy_top1_epoch_13.pth.
2023/06/07 11:25:02 - mmengine - INFO - Epoch(train)  [14][100/109]  lr: 1.0000e-01  eta: 0:20:53  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 2.7818
2023/06/07 11:25:03 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:25:03 - mmengine - INFO - Saving checkpoint at 14 epochs
2023/06/07 11:25:05 - mmengine - INFO - Epoch(val) [14][14/14]    accuracy/top1: 39.4495  accuracy/top5: 79.3578  data_time: 0.0106  time: 0.0498
2023/06/07 11:25:05 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_13.pth is removed
2023/06/07 11:25:06 - mmengine - INFO - The best checkpoint with 39.4495 accuracy/top1 at 14 epoch is saved to best_accuracy_top1_epoch_14.pth.
2023/06/07 11:25:19 - mmengine - INFO - Epoch(train)  [15][100/109]  lr: 1.0000e-01  eta: 0:20:38  time: 0.1311  data_time: 0.0011  memory: 4230  loss: 2.4060
2023/06/07 11:25:21 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:25:21 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/06/07 11:25:23 - mmengine - INFO - Epoch(val) [15][14/14]    accuracy/top1: 36.9266  accuracy/top5: 80.5046  data_time: 0.0101  time: 0.0493
2023/06/07 11:25:36 - mmengine - INFO - Epoch(train)  [16][100/109]  lr: 1.0000e-01  eta: 0:20:22  time: 0.1305  data_time: 0.0008  memory: 4230  loss: 2.4875
2023/06/07 11:25:37 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:25:37 - mmengine - INFO - Saving checkpoint at 16 epochs
2023/06/07 11:25:39 - mmengine - INFO - Epoch(val) [16][14/14]    accuracy/top1: 34.4037  accuracy/top5: 80.2752  data_time: 0.0102  time: 0.0493
2023/06/07 11:25:52 - mmengine - INFO - Epoch(train)  [17][100/109]  lr: 1.0000e-01  eta: 0:20:07  time: 0.1306  data_time: 0.0008  memory: 4230  loss: 2.4638
2023/06/07 11:25:53 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:25:53 - mmengine - INFO - Saving checkpoint at 17 epochs
2023/06/07 11:25:55 - mmengine - INFO - Epoch(val) [17][14/14]    accuracy/top1: 38.0734  accuracy/top5: 78.8991  data_time: 0.0099  time: 0.0489
2023/06/07 11:26:09 - mmengine - INFO - Epoch(train)  [18][100/109]  lr: 1.0000e-01  eta: 0:19:52  time: 0.1309  data_time: 0.0010  memory: 4230  loss: 2.5051
2023/06/07 11:26:10 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:26:10 - mmengine - INFO - Saving checkpoint at 18 epochs
2023/06/07 11:26:12 - mmengine - INFO - Epoch(val) [18][14/14]    accuracy/top1: 43.5780  accuracy/top5: 83.7156  data_time: 0.0165  time: 0.0557
2023/06/07 11:26:12 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_14.pth is removed
2023/06/07 11:26:13 - mmengine - INFO - The best checkpoint with 43.5780 accuracy/top1 at 18 epoch is saved to best_accuracy_top1_epoch_18.pth.
2023/06/07 11:26:18 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:26:26 - mmengine - INFO - Epoch(train)  [19][100/109]  lr: 1.0000e-01  eta: 0:19:37  time: 0.1308  data_time: 0.0009  memory: 4230  loss: 2.5226
2023/06/07 11:26:27 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:26:27 - mmengine - INFO - Saving checkpoint at 19 epochs
2023/06/07 11:26:29 - mmengine - INFO - Epoch(val) [19][14/14]    accuracy/top1: 38.0734  accuracy/top5: 79.8165  data_time: 0.0101  time: 0.0493
2023/06/07 11:26:43 - mmengine - INFO - Epoch(train)  [20][100/109]  lr: 1.0000e-01  eta: 0:19:22  time: 0.1309  data_time: 0.0012  memory: 4230  loss: 2.5278
2023/06/07 11:26:44 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:26:44 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/07 11:26:47 - mmengine - INFO - Epoch(val) [20][14/14]    accuracy/top1: 42.8899  accuracy/top5: 82.5688  data_time: 0.0099  time: 0.0494
2023/06/07 11:27:00 - mmengine - INFO - Epoch(train)  [21][100/109]  lr: 1.0000e-01  eta: 0:19:07  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.5665
2023/06/07 11:27:01 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:27:01 - mmengine - INFO - Saving checkpoint at 21 epochs
2023/06/07 11:27:03 - mmengine - INFO - Epoch(val) [21][14/14]    accuracy/top1: 41.5138  accuracy/top5: 85.3211  data_time: 0.0099  time: 0.0489
2023/06/07 11:27:16 - mmengine - INFO - Epoch(train)  [22][100/109]  lr: 1.0000e-01  eta: 0:18:52  time: 0.1307  data_time: 0.0007  memory: 4230  loss: 2.6840
2023/06/07 11:27:17 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:27:17 - mmengine - INFO - Saving checkpoint at 22 epochs
2023/06/07 11:27:19 - mmengine - INFO - Epoch(val) [22][14/14]    accuracy/top1: 39.9083  accuracy/top5: 83.9450  data_time: 0.0099  time: 0.0489
2023/06/07 11:27:32 - mmengine - INFO - Epoch(train)  [23][100/109]  lr: 1.0000e-01  eta: 0:18:37  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.3788
2023/06/07 11:27:33 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:27:33 - mmengine - INFO - Saving checkpoint at 23 epochs
2023/06/07 11:27:35 - mmengine - INFO - Epoch(val) [23][14/14]    accuracy/top1: 47.0183  accuracy/top5: 85.5505  data_time: 0.0097  time: 0.0486
2023/06/07 11:27:35 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_18.pth is removed
2023/06/07 11:27:36 - mmengine - INFO - The best checkpoint with 47.0183 accuracy/top1 at 23 epoch is saved to best_accuracy_top1_epoch_23.pth.
2023/06/07 11:27:49 - mmengine - INFO - Epoch(train)  [24][100/109]  lr: 1.0000e-01  eta: 0:18:23  time: 0.1312  data_time: 0.0013  memory: 4230  loss: 2.3375
2023/06/07 11:27:51 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:27:51 - mmengine - INFO - Saving checkpoint at 24 epochs
2023/06/07 11:27:52 - mmengine - INFO - Epoch(val) [24][14/14]    accuracy/top1: 44.4954  accuracy/top5: 83.9450  data_time: 0.0102  time: 0.0492
2023/06/07 11:28:06 - mmengine - INFO - Epoch(train)  [25][100/109]  lr: 1.0000e-01  eta: 0:18:08  time: 0.1314  data_time: 0.0013  memory: 4230  loss: 2.4573
2023/06/07 11:28:07 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:28:07 - mmengine - INFO - Saving checkpoint at 25 epochs
2023/06/07 11:28:09 - mmengine - INFO - Epoch(val) [25][14/14]    accuracy/top1: 41.2844  accuracy/top5: 86.4679  data_time: 0.0099  time: 0.0489
2023/06/07 11:28:22 - mmengine - INFO - Epoch(train)  [26][100/109]  lr: 1.0000e-01  eta: 0:17:53  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 2.1970
2023/06/07 11:28:23 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:28:23 - mmengine - INFO - Saving checkpoint at 26 epochs
2023/06/07 11:28:25 - mmengine - INFO - Epoch(val) [26][14/14]    accuracy/top1: 45.1835  accuracy/top5: 85.5505  data_time: 0.0101  time: 0.0497
2023/06/07 11:28:39 - mmengine - INFO - Epoch(train)  [27][100/109]  lr: 1.0000e-01  eta: 0:17:38  time: 0.1317  data_time: 0.0014  memory: 4230  loss: 2.3731
2023/06/07 11:28:40 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:28:40 - mmengine - INFO - Saving checkpoint at 27 epochs
2023/06/07 11:28:42 - mmengine - INFO - Epoch(val) [27][14/14]    accuracy/top1: 43.3486  accuracy/top5: 84.4037  data_time: 0.0099  time: 0.0488
2023/06/07 11:28:49 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:28:55 - mmengine - INFO - Epoch(train)  [28][100/109]  lr: 1.0000e-01  eta: 0:17:24  time: 0.1306  data_time: 0.0008  memory: 4230  loss: 2.4211
2023/06/07 11:28:56 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:28:56 - mmengine - INFO - Saving checkpoint at 28 epochs
2023/06/07 11:28:59 - mmengine - INFO - Epoch(val) [28][14/14]    accuracy/top1: 48.6239  accuracy/top5: 85.0917  data_time: 0.0099  time: 0.0491
2023/06/07 11:28:59 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_23.pth is removed
2023/06/07 11:29:00 - mmengine - INFO - The best checkpoint with 48.6239 accuracy/top1 at 28 epoch is saved to best_accuracy_top1_epoch_28.pth.
2023/06/07 11:29:13 - mmengine - INFO - Epoch(train)  [29][100/109]  lr: 1.0000e-01  eta: 0:17:09  time: 0.1307  data_time: 0.0007  memory: 4230  loss: 2.3871
2023/06/07 11:29:14 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:29:14 - mmengine - INFO - Saving checkpoint at 29 epochs
2023/06/07 11:29:16 - mmengine - INFO - Epoch(val) [29][14/14]    accuracy/top1: 45.8716  accuracy/top5: 85.0917  data_time: 0.0101  time: 0.0491
2023/06/07 11:29:29 - mmengine - INFO - Epoch(train)  [30][100/109]  lr: 1.0000e-01  eta: 0:16:54  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.2906
2023/06/07 11:29:31 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:29:31 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/07 11:29:33 - mmengine - INFO - Epoch(val) [30][14/14]    accuracy/top1: 49.7706  accuracy/top5: 87.8440  data_time: 0.0100  time: 0.0496
2023/06/07 11:29:33 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_28.pth is removed
2023/06/07 11:29:34 - mmengine - INFO - The best checkpoint with 49.7706 accuracy/top1 at 30 epoch is saved to best_accuracy_top1_epoch_30.pth.
2023/06/07 11:29:48 - mmengine - INFO - Epoch(train)  [31][100/109]  lr: 1.0000e-02  eta: 0:16:40  time: 0.1311  data_time: 0.0008  memory: 4230  loss: 2.2496
2023/06/07 11:29:49 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:29:49 - mmengine - INFO - Saving checkpoint at 31 epochs
2023/06/07 11:29:51 - mmengine - INFO - Epoch(val) [31][14/14]    accuracy/top1: 58.0275  accuracy/top5: 88.0734  data_time: 0.0098  time: 0.0488
2023/06/07 11:29:51 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_30.pth is removed
2023/06/07 11:29:52 - mmengine - INFO - The best checkpoint with 58.0275 accuracy/top1 at 31 epoch is saved to best_accuracy_top1_epoch_31.pth.
2023/06/07 11:30:05 - mmengine - INFO - Epoch(train)  [32][100/109]  lr: 1.0000e-02  eta: 0:16:25  time: 0.1308  data_time: 0.0008  memory: 4230  loss: 2.1046
2023/06/07 11:30:06 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:30:06 - mmengine - INFO - Saving checkpoint at 32 epochs
2023/06/07 11:30:08 - mmengine - INFO - Epoch(val) [32][14/14]    accuracy/top1: 57.7982  accuracy/top5: 88.5321  data_time: 0.0101  time: 0.0496
2023/06/07 11:30:21 - mmengine - INFO - Epoch(train)  [33][100/109]  lr: 1.0000e-02  eta: 0:16:10  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 2.0810
2023/06/07 11:30:23 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:30:23 - mmengine - INFO - Saving checkpoint at 33 epochs
2023/06/07 11:30:24 - mmengine - INFO - Epoch(val) [33][14/14]    accuracy/top1: 55.0459  accuracy/top5: 88.0734  data_time: 0.0103  time: 0.0496
2023/06/07 11:30:38 - mmengine - INFO - Epoch(train)  [34][100/109]  lr: 1.0000e-02  eta: 0:15:56  time: 0.1301  data_time: 0.0007  memory: 4230  loss: 2.1505
2023/06/07 11:30:39 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:30:39 - mmengine - INFO - Saving checkpoint at 34 epochs
2023/06/07 11:30:40 - mmengine - INFO - Epoch(val) [34][14/14]    accuracy/top1: 56.8807  accuracy/top5: 89.2202  data_time: 0.0108  time: 0.0493
2023/06/07 11:30:54 - mmengine - INFO - Epoch(train)  [35][100/109]  lr: 1.0000e-02  eta: 0:15:41  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.0196
2023/06/07 11:30:55 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:30:55 - mmengine - INFO - Saving checkpoint at 35 epochs
2023/06/07 11:30:57 - mmengine - INFO - Epoch(val) [35][14/14]    accuracy/top1: 55.9633  accuracy/top5: 89.4495  data_time: 0.0077  time: 0.0468
2023/06/07 11:31:10 - mmengine - INFO - Epoch(train)  [36][100/109]  lr: 1.0000e-02  eta: 0:15:26  time: 0.1305  data_time: 0.0008  memory: 4230  loss: 1.9385
2023/06/07 11:31:11 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:31:11 - mmengine - INFO - Saving checkpoint at 36 epochs
2023/06/07 11:31:13 - mmengine - INFO - Epoch(val) [36][14/14]    accuracy/top1: 55.7339  accuracy/top5: 91.0550  data_time: 0.0098  time: 0.0487
2023/06/07 11:31:23 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:31:26 - mmengine - INFO - Epoch(train)  [37][100/109]  lr: 1.0000e-02  eta: 0:15:12  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 2.1047
2023/06/07 11:31:27 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:31:27 - mmengine - INFO - Saving checkpoint at 37 epochs
2023/06/07 11:31:30 - mmengine - INFO - Epoch(val) [37][14/14]    accuracy/top1: 55.9633  accuracy/top5: 90.3670  data_time: 0.0098  time: 0.0491
2023/06/07 11:31:43 - mmengine - INFO - Epoch(train)  [38][100/109]  lr: 1.0000e-02  eta: 0:14:57  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.9963
2023/06/07 11:31:44 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:31:44 - mmengine - INFO - Saving checkpoint at 38 epochs
2023/06/07 11:31:46 - mmengine - INFO - Epoch(val) [38][14/14]    accuracy/top1: 57.1101  accuracy/top5: 88.9908  data_time: 0.0104  time: 0.0494
2023/06/07 11:31:59 - mmengine - INFO - Epoch(train)  [39][100/109]  lr: 1.0000e-02  eta: 0:14:43  time: 0.1305  data_time: 0.0008  memory: 4230  loss: 2.0120
2023/06/07 11:32:00 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:32:00 - mmengine - INFO - Saving checkpoint at 39 epochs
2023/06/07 11:32:02 - mmengine - INFO - Epoch(val) [39][14/14]    accuracy/top1: 59.6330  accuracy/top5: 89.9083  data_time: 0.0102  time: 0.0491
2023/06/07 11:32:02 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_31.pth is removed
2023/06/07 11:32:03 - mmengine - INFO - The best checkpoint with 59.6330 accuracy/top1 at 39 epoch is saved to best_accuracy_top1_epoch_39.pth.
2023/06/07 11:32:16 - mmengine - INFO - Epoch(train)  [40][100/109]  lr: 1.0000e-02  eta: 0:14:28  time: 0.1309  data_time: 0.0010  memory: 4230  loss: 2.2593
2023/06/07 11:32:18 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:32:18 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/07 11:32:19 - mmengine - INFO - Epoch(val) [40][14/14]    accuracy/top1: 55.5046  accuracy/top5: 89.4495  data_time: 0.0101  time: 0.0490
2023/06/07 11:32:33 - mmengine - INFO - Epoch(train)  [41][100/109]  lr: 1.0000e-02  eta: 0:14:14  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 2.1537
2023/06/07 11:32:34 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:32:34 - mmengine - INFO - Saving checkpoint at 41 epochs
2023/06/07 11:32:36 - mmengine - INFO - Epoch(val) [41][14/14]    accuracy/top1: 55.9633  accuracy/top5: 89.2202  data_time: 0.0097  time: 0.0486
2023/06/07 11:32:49 - mmengine - INFO - Epoch(train)  [42][100/109]  lr: 1.0000e-02  eta: 0:13:59  time: 0.1306  data_time: 0.0007  memory: 4230  loss: 2.0826
2023/06/07 11:32:50 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:32:50 - mmengine - INFO - Saving checkpoint at 42 epochs
2023/06/07 11:32:52 - mmengine - INFO - Epoch(val) [42][14/14]    accuracy/top1: 58.0275  accuracy/top5: 90.5963  data_time: 0.0104  time: 0.0493
2023/06/07 11:33:05 - mmengine - INFO - Epoch(train)  [43][100/109]  lr: 1.0000e-02  eta: 0:13:45  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.9157
2023/06/07 11:33:07 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:33:07 - mmengine - INFO - Saving checkpoint at 43 epochs
2023/06/07 11:33:08 - mmengine - INFO - Epoch(val) [43][14/14]    accuracy/top1: 59.1743  accuracy/top5: 90.1376  data_time: 0.0100  time: 0.0490
2023/06/07 11:33:22 - mmengine - INFO - Epoch(train)  [44][100/109]  lr: 1.0000e-02  eta: 0:13:30  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.8500
2023/06/07 11:33:23 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:33:23 - mmengine - INFO - Saving checkpoint at 44 epochs
2023/06/07 11:33:25 - mmengine - INFO - Epoch(val) [44][14/14]    accuracy/top1: 59.8624  accuracy/top5: 90.3670  data_time: 0.0099  time: 0.0488
2023/06/07 11:33:25 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_39.pth is removed
2023/06/07 11:33:25 - mmengine - INFO - The best checkpoint with 59.8624 accuracy/top1 at 44 epoch is saved to best_accuracy_top1_epoch_44.pth.
2023/06/07 11:33:39 - mmengine - INFO - Epoch(train)  [45][100/109]  lr: 1.0000e-02  eta: 0:13:16  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.2382
2023/06/07 11:33:40 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:33:40 - mmengine - INFO - Saving checkpoint at 45 epochs
2023/06/07 11:33:42 - mmengine - INFO - Epoch(val) [45][14/14]    accuracy/top1: 57.5688  accuracy/top5: 89.6789  data_time: 0.0098  time: 0.0488
2023/06/07 11:33:54 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:33:55 - mmengine - INFO - Epoch(train)  [46][100/109]  lr: 1.0000e-02  eta: 0:13:01  time: 0.1308  data_time: 0.0009  memory: 4230  loss: 2.2822
2023/06/07 11:33:56 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:33:56 - mmengine - INFO - Saving checkpoint at 46 epochs
2023/06/07 11:33:58 - mmengine - INFO - Epoch(val) [46][14/14]    accuracy/top1: 59.6330  accuracy/top5: 90.8257  data_time: 0.0099  time: 0.0490
2023/06/07 11:34:11 - mmengine - INFO - Epoch(train)  [47][100/109]  lr: 1.0000e-02  eta: 0:12:47  time: 0.1310  data_time: 0.0008  memory: 4230  loss: 1.8960
2023/06/07 11:34:12 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:34:12 - mmengine - INFO - Saving checkpoint at 47 epochs
2023/06/07 11:34:14 - mmengine - INFO - Epoch(val) [47][14/14]    accuracy/top1: 59.4037  accuracy/top5: 90.1376  data_time: 0.0100  time: 0.0490
2023/06/07 11:34:28 - mmengine - INFO - Epoch(train)  [48][100/109]  lr: 1.0000e-02  eta: 0:12:32  time: 0.1306  data_time: 0.0007  memory: 4230  loss: 2.1144
2023/06/07 11:34:29 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:34:29 - mmengine - INFO - Saving checkpoint at 48 epochs
2023/06/07 11:34:33 - mmengine - INFO - Epoch(val) [48][14/14]    accuracy/top1: 57.5688  accuracy/top5: 90.5963  data_time: 0.0099  time: 0.0491
2023/06/07 11:34:46 - mmengine - INFO - Epoch(train)  [49][100/109]  lr: 1.0000e-02  eta: 0:12:18  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 2.0634
2023/06/07 11:34:47 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:34:47 - mmengine - INFO - Saving checkpoint at 49 epochs
2023/06/07 11:34:49 - mmengine - INFO - Epoch(val) [49][14/14]    accuracy/top1: 59.6330  accuracy/top5: 89.6789  data_time: 0.0102  time: 0.0493
2023/06/07 11:35:03 - mmengine - INFO - Epoch(train)  [50][100/109]  lr: 1.0000e-02  eta: 0:12:03  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.2312
2023/06/07 11:35:04 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:35:04 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/07 11:35:06 - mmengine - INFO - Epoch(val) [50][14/14]    accuracy/top1: 58.4862  accuracy/top5: 90.3670  data_time: 0.0101  time: 0.0490
2023/06/07 11:35:19 - mmengine - INFO - Epoch(train)  [51][100/109]  lr: 1.0000e-02  eta: 0:11:49  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.2771
2023/06/07 11:35:20 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:35:20 - mmengine - INFO - Saving checkpoint at 51 epochs
2023/06/07 11:35:22 - mmengine - INFO - Epoch(val) [51][14/14]    accuracy/top1: 59.8624  accuracy/top5: 90.8257  data_time: 0.0104  time: 0.0495
2023/06/07 11:35:35 - mmengine - INFO - Epoch(train)  [52][100/109]  lr: 1.0000e-02  eta: 0:11:34  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 2.0146
2023/06/07 11:35:36 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:35:36 - mmengine - INFO - Saving checkpoint at 52 epochs
2023/06/07 11:35:38 - mmengine - INFO - Epoch(val) [52][14/14]    accuracy/top1: 60.5505  accuracy/top5: 91.2844  data_time: 0.0101  time: 0.0491
2023/06/07 11:35:38 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_44.pth is removed
2023/06/07 11:35:39 - mmengine - INFO - The best checkpoint with 60.5505 accuracy/top1 at 52 epoch is saved to best_accuracy_top1_epoch_52.pth.
2023/06/07 11:35:52 - mmengine - INFO - Epoch(train)  [53][100/109]  lr: 1.0000e-02  eta: 0:11:20  time: 0.1303  data_time: 0.0008  memory: 4230  loss: 1.9360
2023/06/07 11:35:53 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:35:53 - mmengine - INFO - Saving checkpoint at 53 epochs
2023/06/07 11:35:55 - mmengine - INFO - Epoch(val) [53][14/14]    accuracy/top1: 61.2385  accuracy/top5: 90.5963  data_time: 0.0103  time: 0.0490
2023/06/07 11:35:55 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_52.pth is removed
2023/06/07 11:35:56 - mmengine - INFO - The best checkpoint with 61.2385 accuracy/top1 at 53 epoch is saved to best_accuracy_top1_epoch_53.pth.
2023/06/07 11:36:09 - mmengine - INFO - Epoch(train)  [54][100/109]  lr: 1.0000e-02  eta: 0:11:05  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.0621
2023/06/07 11:36:10 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:36:10 - mmengine - INFO - Saving checkpoint at 54 epochs
2023/06/07 11:36:12 - mmengine - INFO - Epoch(val) [54][14/14]    accuracy/top1: 60.3211  accuracy/top5: 89.9083  data_time: 0.0100  time: 0.0491
2023/06/07 11:36:25 - mmengine - INFO - Epoch(train)  [55][100/109]  lr: 1.0000e-02  eta: 0:10:51  time: 0.1307  data_time: 0.0007  memory: 4230  loss: 1.7989
2023/06/07 11:36:26 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:36:26 - mmengine - INFO - Saving checkpoint at 55 epochs
2023/06/07 11:36:29 - mmengine - INFO - Epoch(val) [55][14/14]    accuracy/top1: 60.3211  accuracy/top5: 88.9908  data_time: 0.0098  time: 0.0493
2023/06/07 11:36:30 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:36:42 - mmengine - INFO - Epoch(train)  [56][100/109]  lr: 1.0000e-02  eta: 0:10:36  time: 0.1304  data_time: 0.0009  memory: 4230  loss: 1.7927
2023/06/07 11:36:43 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:36:43 - mmengine - INFO - Saving checkpoint at 56 epochs
2023/06/07 11:36:45 - mmengine - INFO - Epoch(val) [56][14/14]    accuracy/top1: 61.2385  accuracy/top5: 91.0550  data_time: 0.0101  time: 0.0487
2023/06/07 11:36:58 - mmengine - INFO - Epoch(train)  [57][100/109]  lr: 1.0000e-02  eta: 0:10:22  time: 0.1303  data_time: 0.0007  memory: 4230  loss: 1.9483
2023/06/07 11:36:59 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:36:59 - mmengine - INFO - Saving checkpoint at 57 epochs
2023/06/07 11:37:01 - mmengine - INFO - Epoch(val) [57][14/14]    accuracy/top1: 59.6330  accuracy/top5: 90.3670  data_time: 0.0103  time: 0.0488
2023/06/07 11:37:14 - mmengine - INFO - Epoch(train)  [58][100/109]  lr: 1.0000e-02  eta: 0:10:07  time: 0.1309  data_time: 0.0009  memory: 4230  loss: 1.9150
2023/06/07 11:37:15 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:37:15 - mmengine - INFO - Saving checkpoint at 58 epochs
2023/06/07 11:37:17 - mmengine - INFO - Epoch(val) [58][14/14]    accuracy/top1: 61.4679  accuracy/top5: 90.3670  data_time: 0.0105  time: 0.0493
2023/06/07 11:37:17 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_53.pth is removed
2023/06/07 11:37:18 - mmengine - INFO - The best checkpoint with 61.4679 accuracy/top1 at 58 epoch is saved to best_accuracy_top1_epoch_58.pth.
2023/06/07 11:37:31 - mmengine - INFO - Epoch(train)  [59][100/109]  lr: 1.0000e-02  eta: 0:09:53  time: 0.1306  data_time: 0.0007  memory: 4230  loss: 2.3312
2023/06/07 11:37:32 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:37:32 - mmengine - INFO - Saving checkpoint at 59 epochs
2023/06/07 11:37:36 - mmengine - INFO - Epoch(val) [59][14/14]    accuracy/top1: 61.4679  accuracy/top5: 91.2844  data_time: 0.0100  time: 0.0494
2023/06/07 11:37:50 - mmengine - INFO - Epoch(train)  [60][100/109]  lr: 1.0000e-02  eta: 0:09:38  time: 0.1301  data_time: 0.0006  memory: 4230  loss: 1.9847
2023/06/07 11:37:51 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:37:51 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/07 11:37:52 - mmengine - INFO - Epoch(val) [60][14/14]    accuracy/top1: 61.9266  accuracy/top5: 89.9083  data_time: 0.0103  time: 0.0491
2023/06/07 11:37:52 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_58.pth is removed
2023/06/07 11:37:53 - mmengine - INFO - The best checkpoint with 61.9266 accuracy/top1 at 60 epoch is saved to best_accuracy_top1_epoch_60.pth.
2023/06/07 11:38:06 - mmengine - INFO - Epoch(train)  [61][100/109]  lr: 1.0000e-03  eta: 0:09:24  time: 0.1302  data_time: 0.0006  memory: 4230  loss: 1.8722
2023/06/07 11:38:08 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:38:08 - mmengine - INFO - Saving checkpoint at 61 epochs
2023/06/07 11:38:09 - mmengine - INFO - Epoch(val) [61][14/14]    accuracy/top1: 61.9266  accuracy/top5: 90.8257  data_time: 0.0098  time: 0.0487
2023/06/07 11:38:22 - mmengine - INFO - Epoch(train)  [62][100/109]  lr: 1.0000e-03  eta: 0:09:09  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.1555
2023/06/07 11:38:24 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:38:24 - mmengine - INFO - Saving checkpoint at 62 epochs
2023/06/07 11:38:25 - mmengine - INFO - Epoch(val) [62][14/14]    accuracy/top1: 60.0917  accuracy/top5: 91.0550  data_time: 0.0100  time: 0.0488
2023/06/07 11:38:39 - mmengine - INFO - Epoch(train)  [63][100/109]  lr: 1.0000e-03  eta: 0:08:55  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.9453
2023/06/07 11:38:40 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:38:40 - mmengine - INFO - Saving checkpoint at 63 epochs
2023/06/07 11:38:42 - mmengine - INFO - Epoch(val) [63][14/14]    accuracy/top1: 61.2385  accuracy/top5: 91.2844  data_time: 0.0100  time: 0.0490
2023/06/07 11:38:55 - mmengine - INFO - Epoch(train)  [64][100/109]  lr: 1.0000e-03  eta: 0:08:40  time: 0.1305  data_time: 0.0008  memory: 4230  loss: 1.6036
2023/06/07 11:38:56 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:38:56 - mmengine - INFO - Saving checkpoint at 64 epochs
2023/06/07 11:38:58 - mmengine - INFO - Epoch(val) [64][14/14]    accuracy/top1: 62.1560  accuracy/top5: 91.5138  data_time: 0.0102  time: 0.0493
2023/06/07 11:38:58 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_60.pth is removed
2023/06/07 11:38:59 - mmengine - INFO - The best checkpoint with 62.1560 accuracy/top1 at 64 epoch is saved to best_accuracy_top1_epoch_64.pth.
2023/06/07 11:39:02 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:39:12 - mmengine - INFO - Epoch(train)  [65][100/109]  lr: 1.0000e-03  eta: 0:08:26  time: 0.1309  data_time: 0.0010  memory: 4230  loss: 1.7515
2023/06/07 11:39:13 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:39:13 - mmengine - INFO - Saving checkpoint at 65 epochs
2023/06/07 11:39:15 - mmengine - INFO - Epoch(val) [65][14/14]    accuracy/top1: 62.1560  accuracy/top5: 91.2844  data_time: 0.0104  time: 0.0491
2023/06/07 11:39:28 - mmengine - INFO - Epoch(train)  [66][100/109]  lr: 1.0000e-03  eta: 0:08:11  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.6765
2023/06/07 11:39:29 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:39:29 - mmengine - INFO - Saving checkpoint at 66 epochs
2023/06/07 11:39:31 - mmengine - INFO - Epoch(val) [66][14/14]    accuracy/top1: 61.9266  accuracy/top5: 91.5138  data_time: 0.0099  time: 0.0488
2023/06/07 11:39:44 - mmengine - INFO - Epoch(train)  [67][100/109]  lr: 1.0000e-03  eta: 0:07:57  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.9311
2023/06/07 11:39:46 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:39:46 - mmengine - INFO - Saving checkpoint at 67 epochs
2023/06/07 11:39:47 - mmengine - INFO - Epoch(val) [67][14/14]    accuracy/top1: 62.1560  accuracy/top5: 91.0550  data_time: 0.0101  time: 0.0493
2023/06/07 11:40:01 - mmengine - INFO - Epoch(train)  [68][100/109]  lr: 1.0000e-03  eta: 0:07:42  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.1420
2023/06/07 11:40:02 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:40:02 - mmengine - INFO - Saving checkpoint at 68 epochs
2023/06/07 11:40:04 - mmengine - INFO - Epoch(val) [68][14/14]    accuracy/top1: 63.3027  accuracy/top5: 90.8257  data_time: 0.0105  time: 0.0495
2023/06/07 11:40:04 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_64.pth is removed
2023/06/07 11:40:04 - mmengine - INFO - The best checkpoint with 63.3027 accuracy/top1 at 68 epoch is saved to best_accuracy_top1_epoch_68.pth.
2023/06/07 11:40:18 - mmengine - INFO - Epoch(train)  [69][100/109]  lr: 1.0000e-03  eta: 0:07:28  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.8357
2023/06/07 11:40:19 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:40:19 - mmengine - INFO - Saving checkpoint at 69 epochs
2023/06/07 11:40:21 - mmengine - INFO - Epoch(val) [69][14/14]    accuracy/top1: 62.6147  accuracy/top5: 91.9725  data_time: 0.0103  time: 0.0493
2023/06/07 11:40:34 - mmengine - INFO - Epoch(train)  [70][100/109]  lr: 1.0000e-03  eta: 0:07:14  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.9109
2023/06/07 11:40:35 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:40:35 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/07 11:40:37 - mmengine - INFO - Epoch(val) [70][14/14]    accuracy/top1: 62.6147  accuracy/top5: 91.5138  data_time: 0.0105  time: 0.0496
2023/06/07 11:40:50 - mmengine - INFO - Epoch(train)  [71][100/109]  lr: 1.0000e-03  eta: 0:06:59  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.7521
2023/06/07 11:40:51 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:40:51 - mmengine - INFO - Saving checkpoint at 71 epochs
2023/06/07 11:40:53 - mmengine - INFO - Epoch(val) [71][14/14]    accuracy/top1: 63.7615  accuracy/top5: 90.8257  data_time: 0.0099  time: 0.0488
2023/06/07 11:40:53 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_68.pth is removed
2023/06/07 11:40:54 - mmengine - INFO - The best checkpoint with 63.7615 accuracy/top1 at 71 epoch is saved to best_accuracy_top1_epoch_71.pth.
2023/06/07 11:41:07 - mmengine - INFO - Epoch(train)  [72][100/109]  lr: 1.0000e-03  eta: 0:06:45  time: 0.1301  data_time: 0.0007  memory: 4230  loss: 1.8733
2023/06/07 11:41:08 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:41:08 - mmengine - INFO - Saving checkpoint at 72 epochs
2023/06/07 11:41:10 - mmengine - INFO - Epoch(val) [72][14/14]    accuracy/top1: 62.6147  accuracy/top5: 90.8257  data_time: 0.0104  time: 0.0489
2023/06/07 11:41:23 - mmengine - INFO - Epoch(train)  [73][100/109]  lr: 1.0000e-03  eta: 0:06:30  time: 0.1300  data_time: 0.0006  memory: 4230  loss: 1.5612
2023/06/07 11:41:24 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:41:24 - mmengine - INFO - Saving checkpoint at 73 epochs
2023/06/07 11:41:26 - mmengine - INFO - Epoch(val) [73][14/14]    accuracy/top1: 64.6789  accuracy/top5: 91.5138  data_time: 0.0099  time: 0.0485
2023/06/07 11:41:26 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_71.pth is removed
2023/06/07 11:41:27 - mmengine - INFO - The best checkpoint with 64.6789 accuracy/top1 at 73 epoch is saved to best_accuracy_top1_epoch_73.pth.
2023/06/07 11:41:32 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:41:40 - mmengine - INFO - Epoch(train)  [74][100/109]  lr: 1.0000e-03  eta: 0:06:16  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.9345
2023/06/07 11:41:41 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:41:41 - mmengine - INFO - Saving checkpoint at 74 epochs
2023/06/07 11:41:43 - mmengine - INFO - Epoch(val) [74][14/14]    accuracy/top1: 64.6789  accuracy/top5: 90.8257  data_time: 0.0082  time: 0.0469
2023/06/07 11:41:56 - mmengine - INFO - Epoch(train)  [75][100/109]  lr: 1.0000e-03  eta: 0:06:01  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.8840
2023/06/07 11:41:57 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:41:57 - mmengine - INFO - Saving checkpoint at 75 epochs
2023/06/07 11:41:59 - mmengine - INFO - Epoch(val) [75][14/14]    accuracy/top1: 64.6789  accuracy/top5: 91.5138  data_time: 0.0099  time: 0.0487
2023/06/07 11:42:12 - mmengine - INFO - Epoch(train)  [76][100/109]  lr: 1.0000e-03  eta: 0:05:47  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.7329
2023/06/07 11:42:13 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:42:13 - mmengine - INFO - Saving checkpoint at 76 epochs
2023/06/07 11:42:15 - mmengine - INFO - Epoch(val) [76][14/14]    accuracy/top1: 64.4495  accuracy/top5: 90.8257  data_time: 0.0100  time: 0.0489
2023/06/07 11:42:28 - mmengine - INFO - Epoch(train)  [77][100/109]  lr: 1.0000e-03  eta: 0:05:32  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.0570
2023/06/07 11:42:30 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:42:30 - mmengine - INFO - Saving checkpoint at 77 epochs
2023/06/07 11:42:31 - mmengine - INFO - Epoch(val) [77][14/14]    accuracy/top1: 64.6789  accuracy/top5: 91.2844  data_time: 0.0099  time: 0.0488
2023/06/07 11:42:45 - mmengine - INFO - Epoch(train)  [78][100/109]  lr: 1.0000e-03  eta: 0:05:18  time: 0.1306  data_time: 0.0008  memory: 4230  loss: 1.8698
2023/06/07 11:42:46 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:42:46 - mmengine - INFO - Saving checkpoint at 78 epochs
2023/06/07 11:42:48 - mmengine - INFO - Epoch(val) [78][14/14]    accuracy/top1: 64.4495  accuracy/top5: 91.7431  data_time: 0.0099  time: 0.0488
2023/06/07 11:43:01 - mmengine - INFO - Epoch(train)  [79][100/109]  lr: 1.0000e-03  eta: 0:05:04  time: 0.1308  data_time: 0.0009  memory: 4230  loss: 1.8167
2023/06/07 11:43:02 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:43:02 - mmengine - INFO - Saving checkpoint at 79 epochs
2023/06/07 11:43:04 - mmengine - INFO - Epoch(val) [79][14/14]    accuracy/top1: 63.9908  accuracy/top5: 91.2844  data_time: 0.0108  time: 0.0496
2023/06/07 11:43:17 - mmengine - INFO - Epoch(train)  [80][100/109]  lr: 1.0000e-03  eta: 0:04:49  time: 0.1309  data_time: 0.0011  memory: 4230  loss: 1.9839
2023/06/07 11:43:18 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:43:18 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/07 11:43:20 - mmengine - INFO - Epoch(val) [80][14/14]    accuracy/top1: 65.3670  accuracy/top5: 91.2844  data_time: 0.0103  time: 0.0492
2023/06/07 11:43:20 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_73.pth is removed
2023/06/07 11:43:21 - mmengine - INFO - The best checkpoint with 65.3670 accuracy/top1 at 80 epoch is saved to best_accuracy_top1_epoch_80.pth.
2023/06/07 11:43:34 - mmengine - INFO - Epoch(train)  [81][100/109]  lr: 1.0000e-03  eta: 0:04:35  time: 0.1308  data_time: 0.0008  memory: 4230  loss: 1.7807
2023/06/07 11:43:35 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:43:35 - mmengine - INFO - Saving checkpoint at 81 epochs
2023/06/07 11:43:37 - mmengine - INFO - Epoch(val) [81][14/14]    accuracy/top1: 65.3670  accuracy/top5: 91.5138  data_time: 0.0101  time: 0.0489
2023/06/07 11:43:50 - mmengine - INFO - Epoch(train)  [82][100/109]  lr: 1.0000e-03  eta: 0:04:20  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.7112
2023/06/07 11:43:52 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:43:52 - mmengine - INFO - Saving checkpoint at 82 epochs
2023/06/07 11:43:53 - mmengine - INFO - Epoch(val) [82][14/14]    accuracy/top1: 65.1376  accuracy/top5: 91.5138  data_time: 0.0099  time: 0.0489
2023/06/07 11:44:02 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:44:07 - mmengine - INFO - Epoch(train)  [83][100/109]  lr: 1.0000e-03  eta: 0:04:06  time: 0.1306  data_time: 0.0008  memory: 4230  loss: 1.9089
2023/06/07 11:44:08 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:44:08 - mmengine - INFO - Saving checkpoint at 83 epochs
2023/06/07 11:44:10 - mmengine - INFO - Epoch(val) [83][14/14]    accuracy/top1: 66.5138  accuracy/top5: 91.2844  data_time: 0.0104  time: 0.0493
2023/06/07 11:44:10 - mmengine - INFO - The previous best checkpoint /home/xjs/lzz/mmpretrain/projects/fruit30/exp/best_accuracy_top1_epoch_80.pth is removed
2023/06/07 11:44:10 - mmengine - INFO - The best checkpoint with 66.5138 accuracy/top1 at 83 epoch is saved to best_accuracy_top1_epoch_83.pth.
2023/06/07 11:44:24 - mmengine - INFO - Epoch(train)  [84][100/109]  lr: 1.0000e-03  eta: 0:03:51  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.8607
2023/06/07 11:44:25 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:44:25 - mmengine - INFO - Saving checkpoint at 84 epochs
2023/06/07 11:44:27 - mmengine - INFO - Epoch(val) [84][14/14]    accuracy/top1: 65.8257  accuracy/top5: 91.7431  data_time: 0.0100  time: 0.0489
2023/06/07 11:44:40 - mmengine - INFO - Epoch(train)  [85][100/109]  lr: 1.0000e-03  eta: 0:03:37  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 1.6125
2023/06/07 11:44:41 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:44:41 - mmengine - INFO - Saving checkpoint at 85 epochs
2023/06/07 11:44:43 - mmengine - INFO - Epoch(val) [85][14/14]    accuracy/top1: 66.2844  accuracy/top5: 90.8257  data_time: 0.0100  time: 0.0491
2023/06/07 11:44:56 - mmengine - INFO - Epoch(train)  [86][100/109]  lr: 1.0000e-03  eta: 0:03:23  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.8973
2023/06/07 11:44:57 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:44:57 - mmengine - INFO - Saving checkpoint at 86 epochs
2023/06/07 11:44:59 - mmengine - INFO - Epoch(val) [86][14/14]    accuracy/top1: 64.6789  accuracy/top5: 91.5138  data_time: 0.0101  time: 0.0492
2023/06/07 11:45:12 - mmengine - INFO - Epoch(train)  [87][100/109]  lr: 1.0000e-03  eta: 0:03:08  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 2.0305
2023/06/07 11:45:14 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:45:14 - mmengine - INFO - Saving checkpoint at 87 epochs
2023/06/07 11:45:15 - mmengine - INFO - Epoch(val) [87][14/14]    accuracy/top1: 63.9908  accuracy/top5: 91.0550  data_time: 0.0104  time: 0.0493
2023/06/07 11:45:29 - mmengine - INFO - Epoch(train)  [88][100/109]  lr: 1.0000e-03  eta: 0:02:54  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 2.1538
2023/06/07 11:45:30 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:45:30 - mmengine - INFO - Saving checkpoint at 88 epochs
2023/06/07 11:45:32 - mmengine - INFO - Epoch(val) [88][14/14]    accuracy/top1: 66.0550  accuracy/top5: 91.5138  data_time: 0.0106  time: 0.0496
2023/06/07 11:45:45 - mmengine - INFO - Epoch(train)  [89][100/109]  lr: 1.0000e-03  eta: 0:02:39  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.6424
2023/06/07 11:45:46 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:45:46 - mmengine - INFO - Saving checkpoint at 89 epochs
2023/06/07 11:45:48 - mmengine - INFO - Epoch(val) [89][14/14]    accuracy/top1: 66.5138  accuracy/top5: 91.9725  data_time: 0.0102  time: 0.0492
2023/06/07 11:46:01 - mmengine - INFO - Epoch(train)  [90][100/109]  lr: 1.0000e-03  eta: 0:02:25  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.8958
2023/06/07 11:46:02 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:46:02 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/07 11:46:04 - mmengine - INFO - Epoch(val) [90][14/14]    accuracy/top1: 65.1376  accuracy/top5: 91.7431  data_time: 0.0099  time: 0.0487
2023/06/07 11:46:17 - mmengine - INFO - Epoch(train)  [91][100/109]  lr: 1.0000e-04  eta: 0:02:10  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.7867
2023/06/07 11:46:19 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:46:19 - mmengine - INFO - Saving checkpoint at 91 epochs
2023/06/07 11:46:20 - mmengine - INFO - Epoch(val) [91][14/14]    accuracy/top1: 65.5963  accuracy/top5: 91.9725  data_time: 0.0099  time: 0.0488
2023/06/07 11:46:31 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:46:34 - mmengine - INFO - Epoch(train)  [92][100/109]  lr: 1.0000e-04  eta: 0:01:56  time: 0.1304  data_time: 0.0007  memory: 4230  loss: 1.5079
2023/06/07 11:46:35 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:46:35 - mmengine - INFO - Saving checkpoint at 92 epochs
2023/06/07 11:46:37 - mmengine - INFO - Epoch(val) [92][14/14]    accuracy/top1: 64.6789  accuracy/top5: 91.0550  data_time: 0.0102  time: 0.0492
2023/06/07 11:46:50 - mmengine - INFO - Epoch(train)  [93][100/109]  lr: 1.0000e-04  eta: 0:01:42  time: 0.1306  data_time: 0.0007  memory: 4230  loss: 1.7928
2023/06/07 11:46:51 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:46:51 - mmengine - INFO - Saving checkpoint at 93 epochs
2023/06/07 11:46:53 - mmengine - INFO - Epoch(val) [93][14/14]    accuracy/top1: 65.8257  accuracy/top5: 91.2844  data_time: 0.0103  time: 0.0492
2023/06/07 11:47:06 - mmengine - INFO - Epoch(train)  [94][100/109]  lr: 1.0000e-04  eta: 0:01:27  time: 0.1309  data_time: 0.0008  memory: 4230  loss: 1.4826
2023/06/07 11:47:07 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:47:07 - mmengine - INFO - Saving checkpoint at 94 epochs
2023/06/07 11:47:09 - mmengine - INFO - Epoch(val) [94][14/14]    accuracy/top1: 66.2844  accuracy/top5: 91.5138  data_time: 0.0105  time: 0.0493
2023/06/07 11:47:22 - mmengine - INFO - Epoch(train)  [95][100/109]  lr: 1.0000e-04  eta: 0:01:13  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.7545
2023/06/07 11:47:24 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:47:24 - mmengine - INFO - Saving checkpoint at 95 epochs
2023/06/07 11:47:25 - mmengine - INFO - Epoch(val) [95][14/14]    accuracy/top1: 64.9083  accuracy/top5: 91.2844  data_time: 0.0101  time: 0.0490
2023/06/07 11:47:39 - mmengine - INFO - Epoch(train)  [96][100/109]  lr: 1.0000e-04  eta: 0:00:58  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.0539
2023/06/07 11:47:40 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:47:40 - mmengine - INFO - Saving checkpoint at 96 epochs
2023/06/07 11:47:42 - mmengine - INFO - Epoch(val) [96][14/14]    accuracy/top1: 65.8257  accuracy/top5: 91.9725  data_time: 0.0100  time: 0.0488
2023/06/07 11:47:55 - mmengine - INFO - Epoch(train)  [97][100/109]  lr: 1.0000e-04  eta: 0:00:44  time: 0.1306  data_time: 0.0008  memory: 4230  loss: 1.8821
2023/06/07 11:47:56 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:47:56 - mmengine - INFO - Saving checkpoint at 97 epochs
2023/06/07 11:47:58 - mmengine - INFO - Epoch(val) [97][14/14]    accuracy/top1: 65.1376  accuracy/top5: 91.7431  data_time: 0.0103  time: 0.0492
2023/06/07 11:48:11 - mmengine - INFO - Epoch(train)  [98][100/109]  lr: 1.0000e-04  eta: 0:00:30  time: 0.1305  data_time: 0.0007  memory: 4230  loss: 1.5850
2023/06/07 11:48:12 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:48:12 - mmengine - INFO - Saving checkpoint at 98 epochs
2023/06/07 11:48:14 - mmengine - INFO - Epoch(val) [98][14/14]    accuracy/top1: 66.0550  accuracy/top5: 91.5138  data_time: 0.0103  time: 0.0492
2023/06/07 11:48:27 - mmengine - INFO - Epoch(train)  [99][100/109]  lr: 1.0000e-04  eta: 0:00:15  time: 0.1307  data_time: 0.0009  memory: 4230  loss: 1.6245
2023/06/07 11:48:28 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:48:28 - mmengine - INFO - Saving checkpoint at 99 epochs
2023/06/07 11:48:30 - mmengine - INFO - Epoch(val) [99][14/14]    accuracy/top1: 66.2844  accuracy/top5: 91.7431  data_time: 0.0099  time: 0.0488
2023/06/07 11:48:43 - mmengine - INFO - Epoch(train) [100][100/109]  lr: 1.0000e-04  eta: 0:00:01  time: 0.1307  data_time: 0.0008  memory: 4230  loss: 2.0566
2023/06/07 11:48:45 - mmengine - INFO - Exp name: resnet50_fruit30_20230607_112102
2023/06/07 11:48:45 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/07 11:48:47 - mmengine - INFO - Epoch(val) [100][14/14]    accuracy/top1: 64.4495  accuracy/top5: 91.9725  data_time: 0.0102  time: 0.0493
